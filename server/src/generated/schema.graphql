### This file was autogenerated by Nexus 0.11.5
### Do not make changes to this file directly


type AggregateAlarm {
  count: Int!
}

type Alarm {
  id: ID!
  intId: Int!
  text: String
}

type AlarmConnection {
  aggregate: AggregateAlarm!
  edges: [AlarmEdge!]!
  pageInfo: PageInfo!
}

input AlarmCreateInput {
  intId: Int!
  text: String
}

type AlarmEdge {
  cursor: String!
  node: Alarm!
}

enum AlarmOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  intId_ASC
  intId_DESC
  text_ASC
  text_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input AlarmUpdateInput {
  intId: Int
  text: String
}

input AlarmUpdateManyMutationInput {
  intId: Int
  text: String
}

input AlarmWhereInput {
  AND: [AlarmWhereInput!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  intId: Int
  intId_gt: Int
  intId_gte: Int
  intId_in: [Int!]
  intId_lt: Int
  intId_lte: Int
  intId_not: Int
  intId_not_in: [Int!]
  NOT: [AlarmWhereInput!]
  OR: [AlarmWhereInput!]
  text: String
  text_contains: String
  text_ends_with: String
  text_gt: String
  text_gte: String
  text_in: [String!]
  text_lt: String
  text_lte: String
  text_not: String
  text_not_contains: String
  text_not_ends_with: String
  text_not_in: [String!]
  text_not_starts_with: String
  text_starts_with: String
}

input AlarmWhereUniqueInput {
  id: ID
  intId: Int
}

type BatchPayload {
  count: Long!
}

scalar Long

type Mutation {
  createAlarm(text: String): Alarm
  deleteAlarm(where: AlarmWhereUniqueInput!): Alarm
  deleteManyAlarms(where: AlarmWhereInput): BatchPayload!
  updateAlarm(data: AlarmUpdateInput!, where: AlarmWhereUniqueInput!): Alarm
  updateManyAlarms(data: AlarmUpdateManyMutationInput!, where: AlarmWhereInput): BatchPayload!
  upsertAlarm(create: AlarmCreateInput!, update: AlarmUpdateInput!, where: AlarmWhereUniqueInput!): Alarm!
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Query {
  alarm(where: AlarmWhereUniqueInput!): Alarm
  alarms(after: String, before: String, first: Int, last: Int, orderBy: AlarmOrderByInput, skip: Int, where: AlarmWhereInput): [Alarm!]!
  alarmsConnection(after: String, before: String, first: Int, last: Int, orderBy: AlarmOrderByInput, skip: Int, where: AlarmWhereInput): AlarmConnection!
}
